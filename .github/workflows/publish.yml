name: Build and Publish to NPM

on:
  push:
    branches: [main]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Configure npm for OIDC
        run: |
          npm config set //registry.npmjs.org/:_authToken \${NPM_TOKEN}

      - name: Install dependencies
        run: npm ci

      - name: Debug npm configuration
        run: |
          echo "NPM Registry:"
          npm config get registry
          echo "NPM User (if authenticated):"
          npm whoami || echo "Not authenticated"
          echo "Available organizations:"
          npm org ls @lambada 2>/dev/null || echo "Cannot access @lambada organization"

      - name: Build packages
        run: npm run build

      - name: Run tests
        run: |
          if npm run test --if-present; then
            echo "Tests passed or no tests found"
          else
            echo "Tests failed, but continuing with deployment"
          fi

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Check package versions
        run: |
          echo "Current package versions:"
          npx lerna list --json | jq -r '.[] | "\(.name): \(.version)"'

      - name: Check package registry status
        run: |
          echo "Checking if packages exist on npm:"
          for package in $(npx lerna list --json | jq -r '.[].name'); do
            echo "Checking $package..."
            npm view $package version 2>/dev/null && echo "$package exists on npm" || echo "$package does not exist on npm"
          done

      - name: Dry run publish
        run: |
          echo "Testing publish with dry-run..."
          npx lerna publish from-package --yes --dry-run

      - name: Publish packages
        run: |
          npx lerna publish from-package --yes